# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_pb2 as chat__pb2


class ChatStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add_user = channel.unary_unary(
                '/Chat/add_user',
                request_serializer=chat__pb2.User.SerializeToString,
                response_deserializer=chat__pb2.Status.FromString,
                )
        self.del_user = channel.unary_unary(
                '/Chat/del_user',
                request_serializer=chat__pb2.User.SerializeToString,
                response_deserializer=chat__pb2.Status.FromString,
                )
        self.get_status = channel.unary_unary(
                '/Chat/get_status',
                request_serializer=chat__pb2.User.SerializeToString,
                response_deserializer=chat__pb2.Status.FromString,
                )
        self.send_msg = channel.unary_unary(
                '/Chat/send_msg',
                request_serializer=chat__pb2.Packet.SerializeToString,
                response_deserializer=chat__pb2.Status.FromString,
                )
        self.get_msg = channel.unary_unary(
                '/Chat/get_msg',
                request_serializer=chat__pb2.User.SerializeToString,
                response_deserializer=chat__pb2.Packet.FromString,
                )


class ChatServicer(object):
    """The greeting service definition.
    """

    def add_user(self, request, context):
        """Adds a new user to the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def del_user(self, request, context):
        """Deletes a user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_status(self, request, context):
        """Get status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_msg(self, request, context):
        """Sends a message to the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_msg(self, request, context):
        """Read one msg from the server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add_user': grpc.unary_unary_rpc_method_handler(
                    servicer.add_user,
                    request_deserializer=chat__pb2.User.FromString,
                    response_serializer=chat__pb2.Status.SerializeToString,
            ),
            'del_user': grpc.unary_unary_rpc_method_handler(
                    servicer.del_user,
                    request_deserializer=chat__pb2.User.FromString,
                    response_serializer=chat__pb2.Status.SerializeToString,
            ),
            'get_status': grpc.unary_unary_rpc_method_handler(
                    servicer.get_status,
                    request_deserializer=chat__pb2.User.FromString,
                    response_serializer=chat__pb2.Status.SerializeToString,
            ),
            'send_msg': grpc.unary_unary_rpc_method_handler(
                    servicer.send_msg,
                    request_deserializer=chat__pb2.Packet.FromString,
                    response_serializer=chat__pb2.Status.SerializeToString,
            ),
            'get_msg': grpc.unary_unary_rpc_method_handler(
                    servicer.get_msg,
                    request_deserializer=chat__pb2.User.FromString,
                    response_serializer=chat__pb2.Packet.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """The greeting service definition.
    """

    @staticmethod
    def add_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/add_user',
            chat__pb2.User.SerializeToString,
            chat__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def del_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/del_user',
            chat__pb2.User.SerializeToString,
            chat__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/get_status',
            chat__pb2.User.SerializeToString,
            chat__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_msg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/send_msg',
            chat__pb2.Packet.SerializeToString,
            chat__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_msg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/get_msg',
            chat__pb2.User.SerializeToString,
            chat__pb2.Packet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
